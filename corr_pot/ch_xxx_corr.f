      real*8 function ch_000_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_000(rch,ch_000_corr)
      return 
      end

      subroutine ch_000(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 90.0 
c         deviation from planar =  0.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.0498832818D-02 , -1.3702334363D-02 /
      data fpp(  3), fpp(  4) / -4.7318297288D-03 , -3.3703467216D-03 /
      data fpp(  5), fpp(  6) / -2.9067833849D-03 , -2.7025197389D-03 /
      data fpp(  7), fpp(  8) / -2.3031376597D-03 , -1.9149296224D-03 /
      data fpp(  9), fpp( 10) / -1.7971438507D-03 , -1.9664949749D-03 /
      data fpp( 11), fpp( 12) / -2.3068762497D-03 , -2.6810000263D-03 /
      data fpp( 13), fpp( 14) / -2.9291236450D-03 , -3.0175053938D-03 /
      data fpp( 15), fpp( 16) / -2.9858547798D-03 , -2.8440754870D-03 /
      data fpp( 17), fpp( 18) / -2.6478432721D-03 , -2.1319324403D-03 /
      data fpp( 19), fpp( 20) / -1.5369269667D-03 , -9.0591696762D-04 /
      data fpp( 21), fpp( 22) / -5.0820516282D-04 , -2.8686238110D-04 /
      data fpp( 23), fpp( 24) / -1.3714531276D-04 , -2.4732871156D-05 /
      data fpp( 25), fpp( 26) / -1.2923202613D-05 , -2.1139565829D-06 /
      data fpp( 27), fpp( 28) / -1.5046763149D-06 ,  3.3153381575D-06 /
 
      data f(  1), f(  2) / -2.6909000000D-02 , -2.4108500000D-02 /
      data f(  3), f(  4) / -2.1841600000D-02 , -1.9814700000D-02 /
      data f(  5), f(  6) / -1.7928600000D-02 , -1.6160500000D-02 /
      data f(  7), f(  8) / -1.4499200000D-02 , -1.2930100000D-02 /
      data f(  9), f( 10) / -1.1439400000D-02 , -1.0022500000D-02 /
      data f( 11), f( 12) / -8.6854000000D-03 , -7.4408000000D-03 /
      data f( 13), f( 14) / -6.3026000000D-03 , -5.2805000000D-03 /
      data f( 15), f( 16) / -4.3783000000D-03 , -3.5948000000D-03 /
      data f( 17), f( 18) / -2.9247000000D-03 , -1.8911000000D-03 /
      data f( 19), f( 20) / -1.1965000000D-03 , -6.6760000000D-04 /
      data f( 21), f( 22) / -3.7490000000D-04 , -2.1660000000D-04 /
      data f( 23), f( 24) / -1.3300000000D-04 , -6.2400000000D-05 /
      data f( 25), f( 26) / -3.3300000000D-05 , -1.0600000000D-05 /
      data f( 27), f( 28) / -2.3000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p05_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p05(rch,ch_p05_corr)
      return 
      end

      subroutine ch_p05(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 95.0 
c         deviation from planar = +5.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.2721437585D-02 , -1.4964624830D-02 /
      data fpp(  3), fpp(  4) / -4.9450630952D-03 , -2.8451227893D-03 /
      data fpp(  5), fpp(  6) / -2.0044457476D-03 , -1.7970942204D-03 /
      data fpp(  7), fpp(  8) / -1.5771773709D-03 , -1.4791962961D-03 /
      data fpp(  9), fpp( 10) / -1.5960374446D-03 , -1.9316539255D-03 /
      data fpp( 11), fpp( 12) / -2.3323468533D-03 , -2.6739586611D-03 /
      data fpp( 13), fpp( 14) / -2.8718185023D-03 , -2.9237673299D-03 /
      data fpp( 15), fpp( 16) / -2.8781121783D-03 , -2.7387839569D-03 /
      data fpp( 17), fpp( 18) / -2.5617519941D-03 , -2.0753520391D-03 /
      data fpp( 19), fpp( 20) / -1.4930898493D-03 , -8.7679491118D-04 /
      data fpp( 21), fpp( 22) / -4.8373050598D-04 , -2.6988306488D-04 /
      data fpp( 23), fpp( 24) / -1.2393723448D-04 , -2.3646764131D-05 /
      data fpp( 25), fpp( 26) / -1.3075709002D-05 , -2.0494909281D-06 /
      data fpp( 27), fpp( 28) / -1.5178909049D-06 ,  3.2709454524D-06 /
 
      data f(  1), f(  2) / -2.5550100000D-02 , -2.2870100000D-02 /
      data f(  3), f(  4) / -2.0773600000D-02 , -1.8927700000D-02 /
      data f(  5), f(  6) / -1.7204000000D-02 , -1.5564700000D-02 /
      data f(  7), f(  8) / -1.3997200000D-02 , -1.2493600000D-02 /
      data f(  9), f( 10) / -1.1050600000D-02 , -9.6729000000D-03 /
      data f( 11), f( 12) / -8.3729000000D-03 , -7.1658000000D-03 /
      data f( 13), f( 14) / -6.0647000000D-03 , -5.0775000000D-03 /
      data f( 15), f( 16) / -4.2066000000D-03 , -3.4502000000D-03 /
      data f( 17), f( 18) / -2.8031000000D-03 , -1.8057000000D-03 /
      data f( 19), f( 20) / -1.1378000000D-03 , -6.3260000000D-04 /
      data f( 21), f( 22) / -3.5590000000D-04 , -2.0760000000D-04 /
      data f( 23), f( 24) / -1.2960000000D-04 , -6.2000000000D-05 /
      data f( 25), f( 26) / -3.3000000000D-05 , -1.0400000000D-05 /
      data f( 27), f( 28) / -2.1000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p10_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p10(rch,ch_p10_corr)
      return 
      end

      subroutine ch_p10(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 100.0 
c         deviation from planar = +10.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.3997878172D-02 , -1.5719243656D-02 /
      data fpp(  3), fpp(  4) / -5.1651472047D-03 , -2.5751675255D-03 /
      data fpp(  5), fpp(  6) / -1.5141826933D-03 , -1.2831017013D-03 /
      data fpp(  7), fpp(  8) / -1.1534105015D-03 , -1.2282562927D-03 /
      data fpp(  9), fpp( 10) / -1.4785643278D-03 , -1.9174863962D-03 /
      data fpp( 11), fpp( 12) / -2.3714900876D-03 , -2.7265532535D-03 /
      data fpp( 13), fpp( 14) / -2.9372968985D-03 , -2.9992591526D-03 /
      data fpp( 15), fpp( 16) / -2.9156664913D-03 , -2.7830748822D-03 /
      data fpp( 17), fpp( 18) / -2.5870339797D-03 , -2.0561106197D-03 /
      data fpp( 19), fpp( 20) / -1.4585235413D-03 , -8.4502675548D-04 /
      data fpp( 21), fpp( 22) / -4.5576943676D-04 , -2.5029549746D-04 /
      data fpp( 23), fpp( 24) / -1.1504857338D-04 , -2.3506531129D-05 /
      data fpp( 25), fpp( 26) / -1.2925302105D-05 , -1.9708281203D-06 /
      data fpp( 27), fpp( 28) / -1.4803715288D-06 ,  3.2236857644D-06 /
 
      data f(  1), f(  2) / -2.5027300000D-02 , -2.2388000000D-02 /
      data f(  3), f(  4) / -2.0362300000D-02 , -1.8596300000D-02 /
      data f(  5), f(  6) / -1.6943500000D-02 , -1.5356800000D-02 /
      data f(  7), f(  8) / -1.3822100000D-02 , -1.2334900000D-02 /
      data f(  9), f( 10) / -1.0898000000D-02 , -9.5215000000D-03 /
      data f( 11), f( 12) / -8.2218000000D-03 , -7.0163000000D-03 /
      data f( 13), f( 14) / -5.9189000000D-03 , -4.9380000000D-03 /
      data f( 15), f( 16) / -4.0761000000D-03 , -3.3305000000D-03 /
      data f( 17), f( 18) / -2.6958000000D-03 , -1.7253000000D-03 /
      data f( 19), f( 20) / -1.0820000000D-03 , -6.0040000000D-04 /
      data f( 21), f( 22) / -3.3940000000D-04 , -2.0000000000D-04 /
      data f( 23), f( 24) / -1.2610000000D-04 , -6.0600000000D-05 /
      data f( 25), f( 26) / -3.2100000000D-05 , -1.0100000000D-05 /
      data f( 27), f( 28) / -2.1000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p15_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p15(rch,ch_p15_corr)
      return 
      end

      subroutine ch_p15(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 105.0 
c         deviation from planar = +15.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.4630784515D-02 , -1.6130930971D-02 /
      data fpp(  3), fpp(  4) / -5.3604916025D-03 , -2.5371026192D-03 /
      data fpp(  5), fpp(  6) / -1.3360979208D-03 , -1.0885056978D-03 /
      data fpp(  7), fpp(  8) / -9.6987928817D-04 , -1.0769771496D-03 /
      data fpp(  9), fpp( 10) / -1.3972121136D-03 , -1.8841743961D-03 /
      data fpp( 11), fpp( 12) / -2.4060903018D-03 , -2.8164643965D-03 /
      data fpp( 13), fpp( 14) / -3.0830521122D-03 , -3.1363271549D-03 /
      data fpp( 15), fpp( 16) / -3.0916392684D-03 , -2.9021157717D-03 /
      data fpp( 17), fpp( 18) / -2.6698976448D-03 , -2.0629991798D-03 /
      data fpp( 19), fpp( 20) / -1.4343556359D-03 , -8.0832036689D-04 /
      data fpp( 21), fpp( 22) / -4.3236289652D-04 , -2.2942804701D-04 /
      data fpp( 23), fpp( 24) / -1.0912491544D-04 , -2.3511230188D-05 /
      data fpp( 25), fpp( 26) / -1.2230163812D-05 , -1.8038934688D-06 /
      data fpp( 27), fpp( 28) / -1.4002458958D-06 ,  2.9871229479D-06 /
 
      data f(  1), f(  2) / -2.5039600000D-02 , -2.2386800000D-02 /
      data f(  3), f(  4) / -2.0364100000D-02 , -1.8608800000D-02 /
      data f(  5), f(  6) / -1.6965800000D-02 , -1.5382600000D-02 /
      data f(  7), f(  8) / -1.3843800000D-02 , -1.2345300000D-02 /
      data f(  9), f( 10) / -1.0891300000D-02 , -9.4943000000D-03 /
      data f( 11), f( 12) / -8.1729000000D-03 , -6.9470000000D-03 /
      data f( 13), f( 14) / -5.8328000000D-03 , -4.8405000000D-03 /
      data f( 15), f( 16) / -3.9730000000D-03 , -3.2282000000D-03 /
      data f( 17), f( 18) / -2.5992000000D-03 , -1.6485000000D-03 /
      data f( 19), f( 20) / -1.0273000000D-03 , -5.6840000000D-04 /
      data f( 21), f( 22) / -3.2200000000D-04 , -1.9090000000D-04 /
      data f( 23), f( 24) / -1.2060000000D-04 , -5.7600000000D-05 /
      data f( 25), f( 26) / -3.0500000000D-05 , -9.8000000000D-06 /
      data f( 27), f( 28) / -2.1000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p20_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p20(rch,ch_p20_corr)
      return 
      end

      subroutine ch_p20(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 110.0 
c         deviation from planar = +20.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.5088334542D-02 , -1.6453330917D-02 /
      data fpp(  3), fpp(  4) / -5.5483417908D-03 , -2.5883019198D-03 /
      data fpp(  5), fpp(  6) / -1.3334505298D-03 , -1.0028959610D-03 /
      data fpp(  7), fpp(  8) / -8.6496562636D-04 , -9.2224153361D-04 /
      data fpp(  9), fpp( 10) / -1.2810682392D-03 , -1.7984855096D-03 /
      data fpp( 11), fpp( 12) / -2.3999897223D-03 , -2.9265556011D-03 /
      data fpp( 13), fpp( 14) / -3.2337878735D-03 , -3.3532929051D-03 /
      data fpp( 15), fpp( 16) / -3.2880405060D-03 , -3.0545450709D-03 /
      data fpp( 17), fpp( 18) / -2.7787792106D-03 , -2.0763898328D-03 /
      data fpp( 19), fpp( 20) / -1.4069114581D-03 , -7.7700688473D-04 /
      data fpp( 21), fpp( 22) / -4.0506100301D-04 , -2.1634910322D-04 /
      data fpp( 23), fpp( 24) / -1.0234258409D-04 , -2.3397696110D-05 /
      data fpp( 25), fpp( 26) / -1.1066631467D-05 , -1.7512575427D-06 /
      data fpp( 27), fpp( 28) / -1.2847205461D-06 ,  2.7858602730D-06 /
 
      data f(  1), f(  2) / -2.5206300000D-02 , -2.2522800000D-02 /
      data f(  3), f(  4) / -2.0482300000D-02 , -1.8716700000D-02 /
      data f(  5), f(  6) / -1.7066000000D-02 , -1.5474800000D-02 /
      data f(  7), f(  8) / -1.3925000000D-02 , -1.2411100000D-02 /
      data f(  9), f( 10) / -1.0936100000D-02 , -9.5134000000D-03 /
      data f( 11), f( 12) / -8.1632000000D-03 , -6.9085000000D-03 /
      data f( 13), f( 14) / -5.7694000000D-03 , -4.7584000000D-03 /
      data f( 15), f( 16) / -3.8803000000D-03 , -3.1326000000D-03 /
      data f( 17), f( 18) / -2.5068000000D-03 , -1.5736000000D-03 /
      data f( 19), f( 20) / -9.7350000000D-04 , -5.3600000000D-04 /
      data f( 21), f( 22) / -3.0350000000D-04 , -1.7990000000D-04 /
      data f( 23), f( 24) / -1.1350000000D-04 , -5.3800000000D-05 /
      data f( 25), f( 26) / -2.8600000000D-05 , -9.3000000000D-06 /
      data f( 27), f( 28) / -2.1000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p25_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p25(rch,ch_p25_corr)
      return 
      end

      subroutine ch_p25(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 115.0 
c         deviation from planar = +25.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.5494008522D-02 , -1.6776982955D-02 /
      data fpp(  3), fpp(  4) / -5.7980596559D-03 , -2.7357784209D-03 /
      data fpp(  5), fpp(  6) / -1.3788266606D-03 , -9.4391493671D-04 /
      data fpp(  7), fpp(  8) / -6.8051359257D-04 , -7.2903069300D-04 /
      data fpp(  9), fpp( 10) / -1.0233636354D-03 , -1.6575147653D-03 /
      data fpp( 11), fpp( 12) / -2.3515773034D-03 , -3.0061760212D-03 /
      data fpp( 13), fpp( 14) / -3.4137186117D-03 , -3.5739495320D-03 /
      data fpp( 15), fpp( 16) / -3.4854832603D-03 , -3.2291174269D-03 /
      data fpp( 17), fpp( 18) / -2.8730470322D-03 , -2.0888001899D-03 /
      data fpp( 19), fpp( 20) / -1.3792522081D-03 , -7.4245189892D-04 /
      data fpp( 21), fpp( 22) / -3.8374019623D-04 , -2.0178731617D-04 /
      data fpp( 23), fpp( 24) / -9.7910539081D-05 , -2.2974724670D-05 /
      data fpp( 25), fpp( 26) / -9.9905622387D-06 , -1.5909509488D-06 /
      data fpp( 27), fpp( 28) / -1.2031220114D-06 ,  2.4205610057D-06 /
 
      data f(  1), f(  2) / -2.5303500000D-02 , -2.2594100000D-02 /
      data f(  3), f(  4) / -2.0540700000D-02 , -1.8772000000D-02 /
      data f(  5), f(  6) / -1.7124100000D-02 , -1.5537500000D-02 /
      data f(  7), f(  8) / -1.3989800000D-02 , -1.2471400000D-02 /
      data f(  9), f( 10) / -1.0983800000D-02 , -9.5394000000D-03 /
      data f( 11), f( 12) / -8.1617000000D-03 , -6.8778000000D-03 /
      data f( 13), f( 14) / -5.7125000000D-03 , -4.6821000000D-03 /
      data f( 15), f( 16) / -3.7930000000D-03 , -3.0422000000D-03 /
      data f( 17), f( 18) / -2.4199000000D-03 , -1.5039000000D-03 /
      data f( 19), f( 20) / -9.2410000000D-04 , -5.0680000000D-04 /
      data f( 21), f( 22) / -2.8670000000D-04 , -1.6990000000D-04 /
      data f( 23), f( 24) / -1.0680000000D-04 , -5.0200000000D-05 /
      data f( 25), f( 26) / -2.6900000000D-05 , -9.0000000000D-06 /
      data f( 27), f( 28) / -1.9000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p30_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p30(rch,ch_p30_corr)
      return 
      end

      subroutine ch_p30(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 120.0 
c         deviation from planar = +30.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.5923743228D-02 , -1.7135013545D-02 /
      data fpp(  3), fpp(  4) / -6.1112025939D-03 , -2.9101760796D-03 /
      data fpp(  5), fpp(  6) / -1.3880930875D-03 , -7.7745157027D-04 /
      data fpp(  7), fpp(  8) / -3.9210063141D-04 , -3.5414590408D-04 /
      data fpp(  9), fpp( 10) / -7.1131575226D-04 , -1.4205910869D-03 /
      data fpp( 11), fpp( 12) / -2.2913199002D-03 , -3.0641293124D-03 /
      data fpp( 13), fpp( 14) / -3.6021628502D-03 , -3.7822192867D-03 /
      data fpp( 15), fpp( 16) / -3.6789600028D-03 , -3.3869407019D-03 /
      data fpp( 17), fpp( 18) / -2.9632771895D-03 , -2.0954480805D-03 /
      data fpp( 19), fpp( 20) / -1.3449304885D-03 , -7.1129177717D-04 /
      data fpp( 21), fpp( 22) / -3.6270240288D-04 , -1.8989861132D-04 /
      data fpp( 23), fpp( 24) / -9.4503151855D-05 , -2.2341238776D-05 /
      data fpp( 25), fpp( 26) / -9.3318930402D-06 , -1.4837014914D-06 /
      data fpp( 27), fpp( 28) / -1.1330663352D-06 ,  2.2360331676D-06 /
 
      data f(  1), f(  2) / -2.5227400000D-02 , -2.2513100000D-02 /
      data f(  3), f(  4) / -2.0469300000D-02 , -1.8722100000D-02 /
      data f(  5), f(  6) / -1.7102500000D-02 , -1.5544500000D-02 /
      data f(  7), f(  8) / -1.4019100000D-02 , -1.2511700000D-02 /
      data f(  9), f( 10) / -1.1021100000D-02 , -9.5613000000D-03 /
      data f( 11), f( 12) / -8.1594000000D-03 , -6.8485000000D-03 /
      data f( 13), f( 14) / -5.6586000000D-03 , -4.6104000000D-03 /
      data f( 15), f( 16) / -3.7116000000D-03 , -2.9587000000D-03 /
      data f( 17), f( 18) / -2.3404000000D-03 , -1.4419000000D-03 /
      data f( 19), f( 20) / -8.8180000000D-04 , -4.8290000000D-04 /
      data f( 21), f( 22) / -2.7370000000D-04 , -1.6250000000D-04 /
      data f( 23), f( 24) / -1.0200000000D-04 , -4.7800000000D-05 /
      data f( 25), f( 26) / -2.5800000000D-05 , -8.9000000000D-06 /
      data f( 27), f( 28) / -2.0000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p35_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p35(rch,ch_p35_corr)
      return 
      end

      subroutine ch_p35(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 125.0 
c         deviation from planar = +35.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.6321016469D-02 , -1.7415467062D-02 /
      data fpp(  3), fpp(  4) / -6.3021152842D-03 , -2.9160718016D-03 /
      data fpp(  5), fpp(  6) / -1.2035975093D-03 , -4.4453816117D-04 /
      data fpp(  7), fpp(  8) / -3.2498460125D-06 ,  5.2537545224D-05 /
      data fpp(  9), fpp( 10) / -3.5690033488D-04 , -1.1899362057D-03 /
      data fpp( 11), fpp( 12) / -2.2033548423D-03 , -3.1366444250D-03 /
      data fpp( 13), fpp( 14) / -3.7450674577D-03 , -3.9780857440D-03 /
      data fpp( 15), fpp( 16) / -3.8625895662D-03 , -3.5215559913D-03 /
      data fpp( 17), fpp( 18) / -3.0511864687D-03 , -2.0981625984D-03 /
      data fpp( 19), fpp( 20) / -1.3136631379D-03 , -6.7708262494D-04 /
      data fpp( 21), fpp( 22) / -3.4120636236D-04 , -1.8289192562D-04 /
      data fpp( 23), fpp( 24) / -9.1225935150D-05 , -2.2476231739D-05 /
      data fpp( 25), fpp( 26) / -9.0691378929D-06 , -1.3044704515D-06 /
      data fpp( 27), fpp( 28) / -1.1056732330D-06 ,  2.0168366165D-06 /
 
      data f(  1), f(  2) / -2.4970400000D-02 , -2.2290700000D-02 /
      data f(  3), f(  4) / -2.0292900000D-02 , -1.8598700000D-02 /
      data f(  5), f(  6) / -1.7032300000D-02 , -1.5520400000D-02 /
      data f(  7), f(  8) / -1.4028400000D-02 , -1.2539100000D-02 /
      data f(  9), f( 10) / -1.1050800000D-02 , -9.5796000000D-03 /
      data f( 11), f( 12) / -8.1572000000D-03 , -6.8224000000D-03 /
      data f( 13), f( 14) / -5.6109000000D-03 , -4.5467000000D-03 /
      data f( 15), f( 16) / -3.6393000000D-03 , -2.8849000000D-03 /
      data f( 17), f( 18) / -2.2705000000D-03 , -1.3887000000D-03 /
      data f( 19), f( 20) / -8.4710000000D-04 , -4.6530000000D-04 /
      data f( 21), f( 22) / -2.6530000000D-04 , -1.5800000000D-04 /
      data f( 23), f( 24) / -9.9200000000D-05 , -4.6200000000D-05 /
      data f( 25), f( 26) / -2.4900000000D-05 , -8.8000000000D-06 /
      data f( 27), f( 28) / -1.9000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p40_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p40(rch,ch_p40_corr)
      return 
      end

      subroutine ch_p40(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 130.0 
c         deviation from planar = +40.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.6390136763D-02 , -1.7384726473D-02 /
      data fpp(  3), fpp(  4) / -6.1909573428D-03 , -2.6564441553D-03 /
      data fpp(  5), fpp(  6) / -8.9826603613D-04 , -9.5491700205D-05 /
      data fpp(  7), fpp(  8) /  3.6523283695D-04 ,  4.0456035239D-04 /
      data fpp(  9), fpp( 10) / -3.3474246522D-05 , -9.3066336631D-04 /
      data fpp( 11), fpp( 12) / -2.0638722883D-03 , -3.1138474807D-03 /
      data fpp( 13), fpp( 14) / -3.8407377891D-03 , -4.1282013630D-03 /
      data fpp( 15), fpp( 16) / -4.0064567589D-03 , -3.6509716012D-03 /
      data fpp( 17), fpp( 18) / -3.1396568361D-03 , -2.1092936910D-03 /
      data fpp( 19), fpp( 20) / -1.2856683998D-03 , -6.4475880784D-04 /
      data fpp( 21), fpp( 22) / -3.2809636882D-04 , -1.7405571687D-04 /
      data fpp( 23), fpp( 24) / -9.1680763709D-05 , -2.1929850438D-05 /
      data fpp( 25), fpp( 26) / -8.9998345367D-06 , -1.1855711707D-06 /
      data fpp( 27), fpp( 28) / -1.0815397398D-06 ,  1.9242698699D-06 /
 
      data f(  1), f(  2) / -2.4559600000D-02 , -2.1961200000D-02 /
      data f(  3), f(  4) / -2.0043600000D-02 , -1.8424700000D-02 /
      data f(  5), f(  6) / -1.6923900000D-02 , -1.5465400000D-02 /
      data f(  7), f(  8) / -1.4013000000D-02 , -1.2548800000D-02 /
      data f(  9), f( 10) / -1.1071600000D-02 , -9.5988000000D-03 /
      data f( 11), f( 12) / -8.1648000000D-03 , -6.8128000000D-03 /
      data f( 13), f( 14) / -5.5832000000D-03 , -4.5043000000D-03 /
      data f( 15), f( 16) / -3.5878000000D-03 , -2.8300000000D-03 /
      data f( 17), f( 18) / -2.2172000000D-03 , -1.3477000000D-03 /
      data f( 19), f( 20) / -8.2120000000D-04 , -4.5310000000D-04 /
      data f( 21), f( 22) / -2.5970000000D-04 , -1.5510000000D-04 /
      data f( 23), f( 24) / -9.7000000000D-05 , -4.4800000000D-05 /
      data f( 25), f( 26) / -2.4000000000D-05 , -8.5000000000D-06 /
      data f( 27), f( 28) / -1.8000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p45_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p45(rch,ch_p45_corr)
      return 
      end

      subroutine ch_p45(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 135.0 
c         deviation from planar =  45.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.5880744977D-02 , -1.6973510046D-02 /
      data fpp(  3), fpp(  4) / -5.8852148407D-03 , -2.4306305916D-03 /
      data fpp(  5), fpp(  6) / -6.5226279285D-04 ,  1.6468176300D-04 /
      data fpp(  7), fpp(  8) /  6.9853574084D-04 ,  7.9117527363D-04 /
      data fpp(  9), fpp( 10) /  3.8176316463D-04 , -5.3322793215D-04 /
      data fpp( 11), fpp( 12) / -1.7588514360D-03 , -2.9613663237D-03 /
      data fpp( 13), fpp( 14) / -3.8106832692D-03 , -4.2209005996D-03 /
      data fpp( 15), fpp( 16) / -4.1307143324D-03 , -3.7812420709D-03 /
      data fpp( 17), fpp( 18) / -3.2443173839D-03 , -2.1389268127D-03 /
      data fpp( 19), fpp( 20) / -1.2799753651D-03 , -6.2894723542D-04 /
      data fpp( 21), fpp( 22) / -3.1543569320D-04 , -1.7090999176D-04 /
      data fpp( 23), fpp( 24) / -9.0524339739D-05 , -2.2171984901D-05 /
      data fpp( 25), fpp( 26) / -8.5877206589D-06 , -1.2508455731D-06 /
      data fpp( 27), fpp( 28) / -1.0387009838D-06 ,  1.9463504919D-06 /
 
      data f(  1), f(  2) / -2.3975000000D-02 , -2.1497400000D-02 /
      data f(  3), f(  4) / -1.9684200000D-02 , -1.8157300000D-02 /
      data f(  5), f(  6) / -1.6738800000D-02 , -1.5352800000D-02 /
      data f(  7), f(  8) / -1.3962100000D-02 , -1.2546400000D-02 /
      data f(  9), f( 10) / -1.1102400000D-02 , -9.6465000000D-03 /
      data f( 11), f( 12) / -8.2140000000D-03 , -6.8517000000D-03 /
      data f( 13), f( 14) / -5.6055000000D-03 , -4.5088000000D-03 /
      data f( 15), f( 16) / -3.5776000000D-03 , -2.8099000000D-03 /
      data f( 17), f( 18) / -2.1922000000D-03 , -1.3238000000D-03 /
      data f( 19), f( 20) / -8.0420000000D-04 , -4.4420000000D-04 /
      data f( 21), f( 22) / -2.5550000000D-04 , -1.5270000000D-04 /
      data f( 23), f( 24) / -9.5300000000D-05 , -4.3700000000D-05 /
      data f( 25), f( 26) / -2.3400000000D-05 , -8.2000000000D-06 /
      data f( 27), f( 28) / -1.8000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p50_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p50(rch,ch_p50_corr)
      return 
      end

      subroutine ch_p50(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 140.0 
c         deviation from planar = +50.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.5078318086D-02 , -1.6440863828D-02 /
      data fpp(  3), fpp(  4) / -5.6832266016D-03 , -2.3462297655D-03 /
      data fpp(  5), fpp(  6) / -5.0185433634D-04 ,  4.3864711089D-04 /
      data fpp(  7), fpp(  8) /  1.1022658928D-03 ,  1.3472893180D-03 /
      data fpp(  9), fpp( 10) /  1.0085768351D-03 ,  1.0840334148D-04 /
      data fpp( 11), fpp( 12) / -1.2471902010D-03 , -2.6346425373D-03 /
      data fpp( 13), fpp( 14) / -3.7092396497D-03 , -4.2483988641D-03 /
      data fpp( 15), fpp( 16) / -4.2721648941D-03 , -3.9229415594D-03 /
      data fpp( 17), fpp( 18) / -3.3760688684D-03 , -2.2053226152D-03 /
      data fpp( 19), fpp( 20) / -1.2951406707D-03 , -6.2563549320D-04 /
      data fpp( 21), fpp( 22) / -3.0871735646D-04 , -1.6749508094D-04 /
      data fpp( 23), fpp( 24) / -8.9302319780D-05 , -2.2745500192D-05 /
      data fpp( 25), fpp( 26) / -8.1156794527D-06 , -1.3302115458D-06 /
      data fpp( 27), fpp( 28) / -9.8884187870D-07 ,  1.9784209394D-06 /
 
      data f(  1), f(  2) / -2.3151600000D-02 , -2.0826800000D-02 /
      data f(  3), f(  4) / -1.9145500000D-02 , -1.7741000000D-02 /
      data f(  5), f(  6) / -1.6440300000D-02 , -1.5165700000D-02 /
      data f(  7), f(  8) / -1.3875400000D-02 , -1.2543800000D-02 /
      data f(  9), f( 10) / -1.1162200000D-02 , -9.7440000000D-03 /
      data f( 11), f( 12) / -8.3245000000D-03 , -6.9551000000D-03 /
      data f( 13), f( 14) / -5.6890000000D-03 , -4.5677000000D-03 /
      data f( 15), f( 16) / -3.6129000000D-03 , -2.8265000000D-03 /
      data f( 17), f( 18) / -2.1957000000D-03 , -1.3153000000D-03 /
      data f( 19), f( 20) / -7.9470000000D-04 , -4.3780000000D-04 /
      data f( 21), f( 22) / -2.5200000000D-04 , -1.5070000000D-04 /
      data f( 23), f( 24) / -9.3900000000D-05 , -4.2700000000D-05 /
      data f( 25), f( 26) / -2.2900000000D-05 , -8.0000000000D-06 /
      data f( 27), f( 28) / -1.9000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
      real*8 function ch_p55_corr(na,x,rpar,ipar)
c
c     na = number of atoms
c     x = cartesian coordinates 
c     e = energy correction in au
c
      implicit real*8 (a-h,o-z)
      dimension x(3,1)
      
      rch = dsqrt( (x(1,1)-x(1,na))**2 + (x(2,1)-x(2,na))**2 + 
     x             (x(3,1)-x(3,na))**2 )

      if(rch.le.2.0) rch = 2.0
      if(rch.ge.20.0) rch = 20.0

      call ch_p55(rch,ch_p55_corr)
      return 
      end

      subroutine ch_p55(xi,fi)
c
c     this subroutine returns the difference:
c
c            e(cas+1+2+qc/aug-cc-pvtz) - e(cas/cc-pvdz)
c
c     for Rch = xi on the ch3+h mep
c
c         umbrella angle        = 145.0 
c         deviation from planar = +55.0
c     
c
      IMPLICIT REAL*8 (A-H,O-Z)
      dimension x( 28), f( 28),fpp( 28),del( 27)
 
      data fpp(  1), fpp(  2) / -2.4503537767D-02 , -1.6090424467D-02 /
      data fpp(  3), fpp(  4) / -5.6497643658D-03 , -2.3055180699D-03 /
      data fpp(  5), fpp(  6) / -3.3816335463D-04 ,  8.2317148842D-04 /
      data fpp(  7), fpp(  8) /  1.6954774010D-03 ,  2.1149189077D-03 /
      data fpp(  9), fpp( 10) /  1.9048469681D-03 ,  1.0206932200D-03 /
      data fpp( 11), fpp( 12) / -4.9761984817D-04 , -2.1352138274D-03 /
      data fpp( 13), fpp( 14) / -3.5015248424D-03 , -4.2436868030D-03 /
      data fpp( 15), fpp( 16) / -4.4237279456D-03 , -4.1014014146D-03 /
      data fpp( 17), fpp( 18) / -3.5606663960D-03 , -2.3010501047D-03 /
      data fpp( 19), fpp( 20) / -1.3351331853D-03 , -6.3008044927D-04 /
      data fpp( 21), fpp( 22) / -3.0854501765D-04 , -1.6373948013D-04 /
      data fpp( 23), fpp( 24) / -9.0097061839D-05 , -2.2239074418D-05 /
      data fpp( 25), fpp( 26) / -7.5466404891D-06 , -1.6405413238D-06 /
      data fpp( 27), fpp( 28) / -9.6710192805D-07 ,  2.1510509640D-06 /
 
      data f(  1), f(  2) / -2.2009300000D-02 , -1.9874600000D-02 /
      data f(  3), f(  4) / -1.8370000000D-02 , -1.7138700000D-02 /
      data f(  5), f(  6) / -1.6008800000D-02 , -1.4897800000D-02 /
      data f(  7), f(  8) / -1.3755800000D-02 , -1.2549000000D-02 /
      data f(  9), f( 10) / -1.1261800000D-02 , -9.9029000000D-03 /
      data f( 11), f( 12) / -8.5074000000D-03 , -7.1326000000D-03 /
      data f( 13), f( 14) / -5.8414000000D-03 , -4.6861000000D-03 /
      data f( 15), f( 16) / -3.6968000000D-03 , -2.8811000000D-03 /
      data f( 17), f( 18) / -2.2280000000D-03 , -1.3227000000D-03 /
      data f( 19), f( 20) / -7.9340000000D-04 , -4.3500000000D-04 /
      data f( 21), f( 22) / -2.5010000000D-04 , -1.4970000000D-04 /
      data f( 23), f( 24) / -9.3200000000D-05 , -4.2600000000D-05 /
      data f( 25), f( 26) / -2.3100000000D-05 , -7.7000000000D-06 /
      data f( 27), f( 28) / -1.8000000000D-06 ,  0.0000000000D+00 /
 
      data x(  1), x(  2) /  2.0000000000D+00 ,  2.2000000000D+00 /
      data x(  3), x(  4) /  2.4000000000D+00 ,  2.6000000000D+00 /
      data x(  5), x(  6) /  2.8000000000D+00 ,  3.0000000000D+00 /
      data x(  7), x(  8) /  3.2000000000D+00 ,  3.4000000000D+00 /
      data x(  9), x( 10) /  3.6000000000D+00 ,  3.8000000000D+00 /
      data x( 11), x( 12) /  4.0000000000D+00 ,  4.2000000000D+00 /
      data x( 13), x( 14) /  4.4000000000D+00 ,  4.6000000000D+00 /
      data x( 15), x( 16) /  4.8000000000D+00 ,  5.0000000000D+00 /
      data x( 17), x( 18) /  5.2000000000D+00 ,  5.6000000000D+00 /
      data x( 19), x( 20) /  6.0000000000D+00 ,  6.5000000000D+00 /
      data x( 21), x( 22) /  7.0000000000D+00 ,  7.5000000000D+00 /
      data x( 23), x( 24) /  8.0000000000D+00 ,  9.0000000000D+00 /
      data x( 25), x( 26) /  1.0000000000D+01 ,  1.2000000000D+01 /
      data x( 27), x( 28) /  1.5000000000D+01 ,  2.0000000000D+01 /
 
      data del(  1), del(  2) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  3), del(  4) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  5), del(  6) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  7), del(  8) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del(  9), del( 10) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 11), del( 12) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 13), del( 14) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 15), del( 16) /  2.0000000000D-01 ,  2.0000000000D-01 /
      data del( 17), del( 18) /  4.0000000000D-01 ,  4.0000000000D-01 /
      data del( 19), del( 20) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 21), del( 22) /  5.0000000000D-01 ,  5.0000000000D-01 /
      data del( 23), del( 24) /  1.0000000000D+00 ,  1.0000000000D+00 /
      data del( 25), del( 26) /  2.0000000000D+00 ,  3.0000000000D+00 /
      data del( 27) /  5.0000000000D+00 /
      data npts / 28/
 

      IF(XI .LE. X(1)) THEN
        ii=1
      ELSE IF( XI .GE. X(npts)) THEN
        ii=npts-1
      ELSE
        call hunt(x,npts,xi,ii)
      ENDIF
      
 20      FI = FPP(II)   * (X(II+1)-XI)**3 / (6.0*DEL(II)) + 
     X     FPP(II+1) * (XI-X(II))**3   / (6.0*DEL(II)) +
     X     ((F(II+1)/DEL(II))-(FPP(II+1)*DEL(II)/6.0)) * (XI-X(II)) + 
     X     ((F(II)  /DEL(II))-(FPP(II)  *DEL(II)/6.0)) * (X(II+1)-XI)
      FI = FI + 0.00 
      RETURN
      END  
